@model GenderPayGap.WebUI.Models.Search.SearchViewModel
@{
    ViewBag.Title = "Gender pay gap";
}

@using GenderPayGap.WebUI.Classes

<main id="content" role="main">
    @using (Html.BeginForm("SearchResults","Viewing",FormMethod.Get))
    {
        <!--@Html.AntiForgeryToken() Removed as this breaks caching -->

        @Html.HiddenFor(model => model.p)
        @Html.HiddenFor(model => model.y)
        @Html.HiddenFor(model=>model.s)

        <div class="grid-row">
            <div class="column-full">
                @Html.CustomValidationSummary()


                <h1 class="heading-large">
                    Gender pay gap data
                </h1>
                <div class="tabs">
                    <div class="tabs-nav">
                        <ul class="tabs-list">
                            <li><a href="search-results" class="selected">Find employers</a></li>
                            <li>@Html.ActionLink("Download data", "Download")</li>
                        </ul>
                    </div>
                    <div class="tabs-content">
                        <div class="tabs-panel" id="tab-1">
                            <div class="tabs-panel-inner">
                                <h2 class="heading-medium"></h2>
                                <div class="grid-row">
                                    <div class="column-one-third">
                                        <p class="reducedMargins">Search by:</p>
                                        @Html.ValidationMessageFor(model => model.search, "", new { @class = "error-danger" })
                                        <div class="search-bar flush2">
                                            <div class="searchfield">
                                                    @Html.CustomEditorFor(model => model.search, htmlAttributes: new {@class = "search-input", @placeholder = "Employer name"})
                                                    <button type="submit" class="search-submit">Search</button>
                                            </div>
                                        </div>
                                        <p class="reducedMargins">Filter by:</p>

                                        <div class="filter">
                                            <div class="head">
                                                Sectors
                                            </div>
                                            <div class="checkbox-container">
                                                @Html.CheckBoxListFor(model => model.s, Model.SectorSources)
                                            </div>
                                        </div>
                                    </div>

                                    <div class="column-two-thirds">

                                        @if (Model.Employers.Results.Count < 1)
                                        {
                                            <div class="zero-results">
                                                @if (string.IsNullOrWhiteSpace(Model.search) && !Model.s.Any())
                                                {
                                                    <h2 class="heading-medium">There is no gender pay gap data available</h2>
                                                   <ul class="list list-bullet">
                                                        <li>Please try again later</li>
                                                    </ul>
                                                }
                                                else
                                                {
                                                    <h2 class="heading-medium">0 employers found that match your search</h2>
                                                    <h2>Please try:</h2>
                                                    <ul class="list list-bullet">
                                                        <li>searching again using different employer name or sector</li>
                                                    </ul>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <p class="">Showing @Model.EmployerStartIndex – @Model.EmployerEndIndex of @Model.Employers.RowCount employers</p>
                                            <table class="search">
                                                <caption class="visuallyhidden">Customer and Business search listing</caption>
                                                <thead>
                                                <tr>
                                                    <th scope="col">Employer</th>
                                                    <th scope="col">Sector</th>
                                                </tr>
                                                </thead>
                                                <tbody>
                                                @for (var i = 0; i < Model.Employers.Results.Count; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Html.ActionLink(Model.Employers.Results[i].Name, "EmployerDetails", new { view = "hourly-rate", id = Model.Employers.Results[i].GetEncryptedId() },new {data_name="ViewLink",data_id=Model.Employers.Results[i].GetEncryptedId()})<br/>
                                                            <span>@Model.Employers.Results[i].FullAddress</span>
                                                        </td>
                                                        <td>
                                                            @Html.Raw(Model.Employers.Results[i].SicSectors)
                                                        </td>
                                                    </tr>
                                                }
                                                </tbody>
                                            </table>

                                            if (Model.Employers.Results.Count > 1)
                                            {
                                                <div class="pager" data-pagecount="@Model.Employers.PageCount" data-currentpage="@Model.Employers.CurrentPage">
                                                    <div class="pager-controls">
                                                        @if (Model.Employers.CurrentPage > 1)
                                                        {
                                                            <a class="link-button" href="@Url.AddQuery("SearchResults",new {p=Model.Employers.CurrentPage-1})">Previous</a>
                                                        }
                                                        @if (Model.Employers.PageCount > 1)
                                                        {
                                                            <ul class="pager-items">
                                                                @for (var i = Model.PagerStartIndex; i <= Model.PagerEndIndex; i++)
                                                                {
                                                                    if (i == Model.Employers.CurrentPage)
                                                                    {
                                                                        <li><b>@i</b></li>
                                                                    }
                                                                    else
                                                                    {
                                                                        <li>
                                                                            <a class="link-button" href="@Url.AddQuery("SearchResults",new {p=i})">@i</a>
                                                                        </li>
                                                                    }
                                                                }
                                                            </ul>
                                                        }
                                                        @if (Model.Employers.CurrentPage < Model.Employers.PageCount)
                                                        {
                                                            <a class="link-button" href="@Url.AddQuery("SearchResults",new {p=Model.Employers.CurrentPage +1})">Next</a>
                                                        }
                                                    </div>
                                                    <div class="pager-summary">Showing @Model.EmployerStartIndex – @Model.EmployerEndIndex of @Model.Employers.RowCount employers</div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</main>
<script type="text/javascript">
    $(document).ready(function() {
        $("[name='s'").click(SubmitSectors);
    });

    function SubmitSectors(e) {
        $(this).closest('form').submit();
        $("[name='s'").prop("disabled", true);
    }
</script>