@model GenderPayGap.WebUI.Models.ReturnViewModel

<main id="content" role="main">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ReturnId)
    @Html.HiddenFor(model => model.OrganisationId)
    @Html.HiddenFor(model => model.DiffMeanBonusPercent)
    @Html.HiddenFor(model => model.DiffMeanHourlyPayPercent)
    @Html.HiddenFor(model => model.DiffMedianBonusPercent)
    @Html.HiddenFor(model => model.DiffMedianHourlyPercent)
    @Html.HiddenFor(model => model.FemaleLowerPayBand)
    @Html.HiddenFor(model => model.FemaleMedianBonusPayPercent)
    @Html.HiddenFor(model => model.FemaleMiddlePayBand)
    @Html.HiddenFor(model => model.FemaleUpperPayBand)
    @Html.HiddenFor(model => model.FemaleUpperQuartilePayBand)
    @Html.HiddenFor(model => model.MaleLowerPayBand)
    @Html.HiddenFor(model => model.MaleMedianBonusPayPercent)
    @Html.HiddenFor(model => model.MaleMiddlePayBand)
    @Html.HiddenFor(model => model.MaleUpperPayBand)
    @Html.HiddenFor(model => model.MaleUpperQuartilePayBand)
    @Html.HiddenFor(model => Model.AccountingDate)

    @Html.HiddenFor(model => model.CompanyLinkToGPGInfo)

    <div class="grid-row">
        <div class="column-two-thirds">
            <h1 class="heading-large">
                <span class="heading-secondary">Step 2 of 4</span>
                Person responsible in your organisation
            </h1>
            <p>
                Enter the name and job title of the person who is responsible for gender pay gap reporting in your organisation. This will be the person who has signed the information published on your organisation’s website.
            </p>
           
                <div class="form-horizontal">

                    @*<h4>User</h4>
                        <hr />*@

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <fieldset>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@


                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.FirstName, "Value")

                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </fieldset>

                </div>

            <p>
                <input class="button" type="submit" role="button" name="command" value="Continue" />
            </p>
            <p>
                @*<input class="Link" type="submit" role="button" name="command" value="Back" />*@
                <input class="Link" type="@TempData["type"]" role="button" name="command" value="@TempData["value"]" />
            </p>

        </div>
    </div>
}
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/css")
}
