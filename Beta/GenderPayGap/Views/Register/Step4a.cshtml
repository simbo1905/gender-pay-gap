@{
    ViewBag.Title = "Register: Step 4a";
}

@model GenderPayGap.WebUI.Models.OrganisationViewModel

<main id="content" role="main">
    @using (Html.BeginForm("Step5","Register"))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(m => m.EmployerCurrentPage)
        @Html.HiddenFor(m => m.EmployerPages)
        @Html.HiddenFor(m => m.Employers)
        @Html.HiddenFor(m => m.EmployerPageSize)
        @Html.HiddenFor(m => m.EmployerEndIndex)
        @Html.HiddenFor(m => m.EmployerRecords)
        @Html.HiddenFor(m => m.SectorType)

        @Html.HiddenFor(m => m.SearchText)

        <input type="submit" style="display:none" name="command" value="">
        <div class="grid-row">
            @Html.ValidationSummary("", new { @class = "text-danger" })
            <div class="column-two-thirds">

                <h1 class="heading-large">

                    <span class="heading-secondary">Step 5 of 6</span>
                    Add your organisation’s address
                </h1>

                <div class="dynamic-content default-content">
                    <p>Please enter the address where correspondence about your organisation’s gender pay gap data should be sent.</p>
                    <h2 class="heading-medium">Employer's name</h2>
                    @*<p>Oxford City Council</p>*@

                    @{
                        //Create a new list for EmployerRecord
                        Model.Employers = new List<GenderPayGap.WebUI.Models.EmployerRecord>();

                        //Create a test EmployerRecord
                        var testEmployerRecord = new GenderPayGap.WebUI.Models.EmployerRecord()
                        {
                            OrgName = "Abbots Langley Parish Council",
                            Address1 = "123 Ever Green Terrace",
                            Address2 = "Westminster",
                            Address3 = "London",
                            CompanyNumber = "QR324134",
                            CompanyStatus = "Active",
                            Country = "United Kingdom",
                            EmailPatterns = "",
                            //Name        = "", //does not have a set accessor
                            PoBox = "abbotslangley-pc.gov.uk",
                            PostCode = "W2 AA"
                        };

                        //Add the new EmployerRecord to EmployerRecord List 
                        Model.Employers.Add(testEmployerRecord);

                        //NOTE:Once the tests are done replace [0] with [i]!!!

                    }


                   @*@{ int x = Model.SelectedEmployerIndex; }*@

                    <p>@Html.ValueFor(model => model.Employers[Model.SelectedEmployerIndex].OrgName)</p>

                    <h2 class="heading-medium">Employer's address</h2>

                    <fieldset>

                         @*<div class="form-group form-group-compound">
                                <label class="form-label" for="address-line-1">Address</label>
                                <input class="form-control" id="address-line-1" type="text">
                            </div>*@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Employers[Model.SelectedEmployerIndex].Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Employers[Model.SelectedEmployerIndex].Address1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.Employers[Model.SelectedEmployerIndex].Address1, "Value")

                                @Html.ValidationMessageFor(model => model.Employers[Model.SelectedEmployerIndex].Address1, "", new { @class = "text-danger" })
                            </div>
                        </div>


                         @*<div class="form-group">
                                <label class="form-label visuallyhidden" for="address-line-2">Street</label>
                                <input class="form-control" placeholder="optional" id="address-line-2" type="text">
                            </div>*@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Employers[Model.SelectedEmployerIndex].Address2, htmlAttributes: new { @class = "control-label col-md-2 visuallyhidden" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Employers[Model.SelectedEmployerIndex].Address2, new { htmlAttributes = new { @class = "form-control", placeholder = "optional" } })
                                @Html.HiddenFor(model => model.Employers[Model.SelectedEmployerIndex].Address2, "Value")

                                @Html.ValidationMessageFor(model => model.Employers[Model.SelectedEmployerIndex].Address2, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @*<div class="form-group">
                            <label class="form-label" for="address-town">Town or City</label>
                            <input class="form-control form-control-1-4" id="address-town" type="text">
                        </div>*@
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.Employers[0].Address3, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <label class="form-label" for="address-town">Town or City</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Employers[Model.SelectedEmployerIndex].Address3, new { htmlAttributes = new { @class = "form-control form-control-1-4" } })
                                @Html.HiddenFor(model => model.Employers[Model.SelectedEmployerIndex].Address3, "Value")

                                @Html.ValidationMessageFor(model => model.Employers[Model.SelectedEmployerIndex].Address3, "", new { @class = "text-danger" })
                            </div>
                        </div>
                      

                         @*<div class="form-group form-group-compound">
                                <label class="form-label" for="address-postcode">Postcode</label>
                                <input class="form-control form-control-1-8" id="address-postcode" type="text">
                            </div>*@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Employers[Model.SelectedEmployerIndex].PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Employers[Model.SelectedEmployerIndex].PostCode, new { htmlAttributes = new { @class = "form-control form-control-1-8" } })
                                @Html.HiddenFor(model => model.Employers[Model.SelectedEmployerIndex].PostCode, "Value")

                                @Html.ValidationMessageFor(model => model.Employers[Model.SelectedEmployerIndex].PostCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </fieldset>
                    <br><br>

                    @*<a href="confirm-organisation?dc=public" class="search-submit button">Submit</a>*@
                    <input class="button" type="submit" role="button" name="command" value="Submit" />

                </div>

            </div>
        </div>
                        }
</main>
