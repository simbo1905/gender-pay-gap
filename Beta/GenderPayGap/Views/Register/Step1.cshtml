@{
    ViewBag.Title = "About you - Gender pay gap reporting service";
}
@model GenderPayGap.WebUI.Models.RegisterViewModel
@using Extensions
@using GenderPayGap.WebUI.Classes
<main id="content" role="main">
    <div class="grid-row">
        <div class="column-two-thirds">
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary("", new { @class = "text-danger" })
            @Html.AntiForgeryToken()
            @Html.SpamProtectionTimeStamp()
            @Html.HiddenFor(m => m.IdentityProvider)
            <h1 class="heading-large">
                <span class="heading-secondary">Step 1 of 5</span>
                About you
            </h1>
            if (!User.Identity.IsAuthenticated)
            {
                <p>If you already have an account, please @Html.ActionLink("sign In", "Step1", "Submit").</p>
            }

                <h2 class="heading-medium">Email address</h2>
                <legend class="visuallyhidden">Email</legend>
                <p>Enter an email address that you can access. The service will send you an email to verify your identity.</p>
                <fieldset>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.EmailAddress, "Enter your email address", htmlAttributes: new { @class = "form-label col-md-10" })
                        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @type = "email", @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.ConfirmEmailAddress, "Confirm your email address", htmlAttributes: new { @class = "form-label col-md-10" })
                        @Html.ValidationMessageFor(model => model.ConfirmEmailAddress, "", new { @class = "text-danger" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmEmailAddress, new { htmlAttributes = new { @type = "email", @class = "form-control" } })
                        </div>
                    </div>
                </fieldset>

                <h2 class="heading-medium">Your details</h2>

                <fieldset>
                    <legend class="visuallyhidden">Email</legend>
                    <p>Enter your name and job title. The service will send a gender pay gap PIN by post so you can use the service.</p>
                    <div class="form-group ">
                        @Html.LabelFor(model => model.FirstName, "First name", htmlAttributes: new { @class = "form-label col-md-10" })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group ">
                        <div class="form-group ">
                            @Html.LabelFor(model => model.LastName, "Last name", htmlAttributes: new { @class = "form-label col-md-10" })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                    <div class="form-group ">
                        <div class="form-group ">
                            @Html.LabelFor(model => model.JobTitle, "Job title", htmlAttributes: new { @class = "form-label col-md-10" })
                            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                </fieldset>

                if (!User.Identity.IsAuthenticated || Model.IdentityProvider.EqualsI("GPG"))
                {
                    <h2 class="heading-medium">Create password</h2>
                    <fieldset>
                        <legend class="visuallyhidden">Password</legend>
                        <div class="text">
                            <p>Your password must be at least 8 characters long.</p>
                            <p>It must also have at least one of the following:</p>
                            <ul class="list list-bullet">
                                <li>lower-case letter</li>
                                <li>capital letter and</li>
                                <li>number</li>
                            </ul>
                        </div>
                        <div class="form-group ">
                            <div class="form-group ">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label col-md-10" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                        <div class="form-group ">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label col-md-10" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </fieldset>
                }
                <fieldset>
                    <div class="form-group">
                        <input type="submit" class="button" value="Continue" />
                    </div>
                </fieldset>
            }
        </div>
    </div>
</main>
